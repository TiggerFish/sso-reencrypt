apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sso-postgresql
  name: sso-postgresql
  namespace: sso-reencrypt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sso-postgresql
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: sso-postgresql
    spec:
      containers:
      - image: registry.redhat.io/rhel9/postgresql-13:1-137
        name: sso-postgresql
        env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: sso-postgresql-secret
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: sso-postgresql-secret
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: sso-postgresql-secret
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /usr/libexec/check-container
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: postgresql-data
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: sso-postgresql
status: {}
